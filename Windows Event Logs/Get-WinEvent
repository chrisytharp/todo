------------------------------------------------------------------------------------------------------------------------------------------------------------------
PowerShell cmdlet "Get-WinEvent"
--------------------------------
Get-WinEvent cmdlet "gets events from event logs and event tracing log files on local & remote computers."

Note: The "Get-WinEvent" cmdlet replaces the "Get-EventLog" cmdlet

you can filter event logs:
  "Get-WinEvent -LogName Application | Where-Object { $_.ProviderName -Match 'WLMS' }"
  
It's inefficient to send objects down the pipeline to a "Where-Object" cmd. 
The use of the "Get-WinEvent" cmdlet's "FilterHashtable" parameter is recommended to filter event logs !!!  

this cmd is the same as the cmd ABOVE but instead of using "Where-Object" cmdlet the "FilterHashtable" is used instead
  Get-WinEvent -FilterHashtable @{ 
      LogName='Application'             <-- IS the SAME As -->      "Get-WinEvent -LogName Application | Where-Object { $_.ProviderName -Match 'WLMS' }"
      ProviderName='WLMS'
   }
------------------------------------------------------------------------------------------------------------------------------------------------------------------
Hash Table
----------
The syntax of a hash table is as follows:  @{ <name> = <vaule> ; [<name> = <value> ] ...}
    Guidelines for a Hash Table:
        -Begin  w/ an at symbol  '@'
        -Enclose w/ in braces    '{}'
        -Enter 1 or more key\value pairs for the content
        -Use an equal sign to seperate each key from value '='
NOTE: You don't need to use a semicolon if you separate each key/value with a new line. Like ABOVE CODE

Accepted key/value pairs for the Get-WinEvent FilterHashtable parameter:
        KEY NAME 	     VALUE DATA TYPE        	Accepts wildcard characters?  
        LogName	          <String[]>	            Yes
        ProviderName	    <String[]>	            Yes
        Path	            <String[]>	            No
        Keywords	        <Long[]>	              No
        ID	              <Int32[]>	              No
        Level	            <Int32[]>	              No
        StartTime	        <DateTime>	            No
        EndTime	          <DateTime>	            No
        UserID	          <SID>	                  No
        Data	            <String[]>	            No
        <named-data>	    <String[]>	            No


Event Viewer can provide quick information on what you need to build your hash table !!!
  EventViewer > Application > Select a Log and look in middle pane
  Event Viewer Log will show in GENERAL tab (near BOTTOM): 
        Log Name: Application
        Source:   MsiInstaller
        EventID:  11707
        Level:    Informational
  
  Build Hashtable like so: Get-WinEvent -FilterHashtable @{ LogName='Application'; ProviderName='MsiInstaller'; ID=11707}
    
------------------------------------------------------------------------------------------------------------------------------------------------------------------
USEFULL CMDS
------------------------------------------------------------------------------------------------------------------------------------------------------------------

Get-WinEvent -FilterHashtable @{LogName='Microsoft-Windows-PowerShell/Operational'; ID=4104} | Select-Object -Property Message | Select-String -Pattern 'SecureString'
             
             
             
             
             
             
