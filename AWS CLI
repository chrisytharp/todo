Instructions for installing the AWS CLI are here: https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
AWS divides its infrastructure into Regions, mostly independent clusters of datacenters. 
        Because regions are independent - you'll get different answers to questions depending on the region you are querying. 
        
        "--region"  <-- to specify a region in AWS CLI.

Amazon S3 (Simple Storage Service) is their hosted object storage service. Objects are stored in Buckets.
simplify concept, Buckets are key-value stores, "Object Key" being a "full pathname for a file" & "the value being the contents of the file". 

S3 is a publicly hosted service - it doesn't exist behind a corporate firewall, making it convenient for hosting public 
content. AWS has an entire feature set around hosting a public website in S3.

AWS Buckets use a global namespace. Only one AWS customer can create a bucket. 

-- Discovering Bucket Names -------------------------------------------------------------------------------------------------------------------------
S3 buckets will loo like http://BUCKETNAME.s3.amazonaws.com/FILENAME.ext or http://s3.amazonaws.com/BUCKETNAME/FILENAME.ext

Downloading an object from S3:

CURL -->          curl http://irs-form-990.s3.amazonaws.com/201101319349101615_public.xml

AWS CLI -->       aws s3 cp s3://irs-form-990/201101319349101615_public.xml . --no-sign-request

the option --no-sign-request allows you to request data from S3 without being an AWS Customer

-- Amazon S3 Authentication ------------------------------------------------------------------
In Amazon S3, Object permissions are different from Bucket permissions.
    Bucket permissions allow you to list the objects in a bucket
    Object's permissions will enable you to download the object. 
In the case of the irs-form-990 bucket, both the bucket and all the objects in the bucket are publicly readable. 
But that doesn't have to be the case. Objects can be readable while the bucket is not, or the bucket can be publicly readable, but the Objects are not. 

Note: you can also have public write permissions to a Bucket. This is generally a bad idea and has been the vector of several crypto-mining incidents. 

There are also two levels of public buckets and objects. The first level is "Anyone." This is what you experienced with the irs-form-990 bucket. You could just hit that URL 
from your local browser. The second level is just as public - and that is public to Any AWS Customer (what AWS foolishly called AuthenticatedUsers for many years). Anyone 
with a credit card can create an AWS account; therefore, Authenticated Users doesn't provide much data protection.

ACL Name	                                      BUCKET	                                                                                    OBJECT
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Anyone                                Anonymously list contents of                                                                Ability to download via curl or
                                      the bucket via curl or with                                                                 aws s3 cp --no-sign-request
                                      aws s3 ls --no-sign-request
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

AuthenticatedUsers                    Can only list the bucket with                                                               You can only download the object with
                                      active AWS keys via                                                                         active AWS Keys via
                                      aws s3 ls                                                                                   aws s3 cp
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------


AWS IAM
All requests to AWS services must be signed. This is typically done behind the scenes by the AWS CLI or the various Software development Kits that AWS provides. 
The signing process leverages IAM Access Keys. These access keys are one of the primary ways an AWS account is compromised.

----IAM Access Keys 
IAM Access Keys consist of an "Access Key ID" and the "Secret Access Key" 
Access Key IDs always begin with the letters 
"AKIA" & are 20 characters long.  The Secret Access Key is 40 characters long.
These act as a user name for the AWS API.  
AWS generates both strings; however, AWS doesn't make the Secret Access Key available to download after the initial generation. 

There is another type of credentials, short-term credentials, where the Access Key ID begins with the letters 
"ASIA" and includes an additional string called the Session Token. 

Conducting Reconnaissance with IAM
When you find credentials to AWS, you can add them to your AWS Profile in the AWS CLI. For this, you use the command:

aws configure --profile PROFILENAME

This command will add entries to the .aws/config and .aws/credentials files in your user's home directory. 

Once you have configured a new profile with the new access keys, you can execute any command using this other set of credentials. For example, to list all the S3 Buckets 
in the AWS account you have found credentials for, try:

aws s3 ls --profile PROFILENAME

A few other common AWS reconnaissance techniques are:
1. Finding the Account ID belonging to an access key:
        aws sts get-access-key-info --access-key-id AKIAEXAMPLE 
2. Determining the Username the access key you're using belongs to
        aws sts get-caller-identity --profile PROFILENAME
3. Listing all the EC2 instances running in an account
        aws ec2 describe-instances --output text --profile PROFILENAME
4.Listing all the EC2 instances running in an account in a different region
        aws ec2 describe-instances --output text --region us-east-1 --profile PROFILENAME

AWS ARNs
An Amazon ARN is their way of generating a unique identifier for all resources in the AWS Cloud. It consists of multiple strings separated by colons.

The format is:
        arn:aws:<service>:<region>:<account_id>:<resource_type>/<resource_name>











